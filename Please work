-- Step 1: Source - Get count of rank = 1 records after applying source logic
WITH aggregated_data AS (
    SELECT
        CASE 
            WHEN metric_name = 'active_sessions_p90' THEN 'active_sessions'
            WHEN metric_name = 'total_subscribers_p90' THEN 'total_subscribers' 
        END AS metric_name,
        trans_dt,
        site_name,
        event_time,
        fqdn,
        group_value,
        value,
        SUM(value) OVER (PARTITION BY metric_name, site_name, trans_dt, event_time) AS total_value
    FROM `${aether_5g_core_module_tgt_project_id}.${aether_5g_core_module_tgt_dataset_name}.${aether_5g_core_module_src_smf_derived_tblname}`
    WHERE trans_dt = DATE(trans_ts)
      AND LOWER(metric_name) IN ('active_sessions_p90', 'total_subscribers_p90')
),
ranked_smf_data AS (
    SELECT *,
           RANK() OVER (PARTITION BY metric_name, site_name, trans_dt ORDER BY total_value DESC) AS rank
    FROM aggregated_data
),
final_source AS (
    SELECT *
    FROM ranked_smf_data
    WHERE rank = 1 AND trans_dt = DATE(trans_ts)
    QUALIFY ROW_NUMBER() OVER (
      PARTITION BY trans_dt, metric_name, site_name, fqdn, group_value 
      ORDER BY total_value DESC
    ) = 1
),
-- Step 2: Target - Select records from your target table for same date
final_target AS (
    SELECT *
    FROM `${aether_5g_core_module_tgt_project_id}.${aether_5g_core_module_tgt_dataset_name}.${aether_5g_core_module_tgt_core_utilization_tblname}`
    WHERE trans_dt = DATE(process_ts)
      AND function_name = 'smf'
      AND metric_name IN ('active_sessions', 'total_subscribers')
)

-- Step 3: Compare counts
SELECT 
  src.trans_dt,
  COUNT(DISTINCT src.fqdn || src.metric_name || src.site_name || src.group_value) AS source_count,
  COUNT(DISTINCT tgt.device_name || tgt.metric_name || tgt.site_name || tgt.group_value) AS target_count,
  CASE 
    WHEN COUNT(DISTINCT src.fqdn || src.metric_name || src.site_name || src.group_value) = 
         COUNT(DISTINCT tgt.device_name || tgt.metric_name || tgt.site_name || tgt.group_value) 
    THEN 'MATCH' ELSE 'MISMATCH'
  END AS dq_status
FROM final_source src
LEFT JOIN final_target tgt
  ON src.trans_dt = tgt.trans_dt
  AND src.metric_name = tgt.metric_name
  AND src.site_name = tgt.site_name
  AND src.fqdn = tgt.device_name
  AND src.group_value = tgt.group_value
GROUP BY src.trans_dt
