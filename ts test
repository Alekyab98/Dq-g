-- Step 1: Source - Get count of rank = 1 records after applying source logic
WITH aggregated_data AS (
    SELECT
        CASE 
            WHEN metric_name = 'active_sessions_p90' THEN 'active_sessions'
            WHEN metric_name = 'total_subscribers_p90' THEN 'total_subscribers' 
        END AS metric_name,
        trans_dt,
        site_name,
        event_time,
        fqdn,
        group_value,
        value,
        SUM(value) OVER (PARTITION BY metric_name, site_name, trans_dt, event_time) AS total_value
    FROM `vz-it-pr-gudv-dtwndo-0.aid_nwperf_aether_core_tbls_v.aether_smf_performance_derived_tbl`
    WHERE trans_dt ='2025-04-10'
      AND LOWER(metric_name) IN ( 'total_subscribers_p90')
),
ranked_smf_data AS (
    SELECT *,
           RANK() OVER (PARTITION BY metric_name, site_name, trans_dt ORDER BY total_value DESC) AS rank
    FROM aggregated_data
),
final_source AS (
    SELECT *
    FROM ranked_smf_data
    WHERE rank = 1 AND trans_dt ='2025-04-10'
    QUALIFY ROW_NUMBER() OVER (
      PARTITION BY trans_dt, metric_name, site_name, fqdn, group_value 
      ORDER BY total_value DESC
    ) = 1
),
final_target AS (
   SELECT trans_dt,event_time,metric_name,metric_value,device_name,site_name,coalesce(group_value,'NA') as group_value
    FROM `vz-it-pr-gudv-dtwndo-0.aid_nwperf_aether_core_tbls_v.aether_core_utilization_planning`
    WHERE trans_dt ='2025-04-10'
      AND function_name = 'smf'
      AND metric_name IN ( 'total_subscribers')
)

-- Step 3: Compare counts
SELECT 
  
  DISTINCT src.trans_dt,src.fqdn ,tgt.device_name  , src.metric_name ,  tgt.metric_name  ,src.site_name , tgt.site_name  , src.group_value,  tgt.group_value,src.event_time,
  tgt.event_time,src.value,tgt.metric_value
  -- COUNT(DISTINCT src.fqdn || src.metric_name || src.site_name || src.group_value) AS source_count,
  -- COUNT(DISTINCT tgt.device_name || tgt.metric_name || tgt.site_name || tgt.group_value) AS target_count,
  -- CASE 
  --   WHEN COUNT(DISTINCT src.fqdn || src.metric_name || src.site_name || src.group_value) = 
  --        COUNT(DISTINCT tgt.device_name || tgt.metric_name || tgt.site_name || tgt.group_value) 
  --   THEN 'MATCH' ELSE 'MISMATCH'
  -- END AS dq_status
FROM final_source src
LEFT JOIN final_target tgt
  ON src.trans_dt = tgt.trans_dt
  AND src.metric_name = tgt.metric_name
  AND src.site_name = tgt.site_name
  AND src.fqdn = tgt.device_name
  AND src.group_value = tgt.group_value
GROUP BY all
